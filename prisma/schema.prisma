// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo optimizado para datos de TEMPO (O3 y NO2)
model TempoMeasurement {
  id                              BigInt   @id @default(autoincrement())
  latitude                        Float
  longitude                       Float
  timestamp                       DateTime
  pollutant                       String   @db.VarChar(10) // "O3" o "NO2"
  tropospheric_concentration_ppb  Float
  vertical_column_du              Float
  aqi                             Int
  aqi_category                    String   @db.VarChar(20)
  quality_flag                    Float
  createdAt                       DateTime @default(now())

  // Índices para optimizar búsquedas
  @@index([timestamp, pollutant]) // Búsqueda por fecha y tipo de contaminante
  @@index([latitude, longitude, timestamp]) // Búsqueda geoespacial por tiempo
  @@index([pollutant, aqi_category]) // Filtrado por categoría de calidad
  @@map("tempo_measurements")
}

// Modelo para datos de OpenAQ (sensores terrestres de PM - Particulate Matter)
model OpenAQMeasurement {
  id                BigInt   @id @default(autoincrement())
  
  // Información del sensor
  sensorId          Int
  locationId        Int
  locationName      String   @db.VarChar(255)
  country           String?  @db.VarChar(100)
  
  // Coordenadas (Norte América)
  latitude          Float
  longitude         Float
  
  // Medición de PM
  parameter         String   @db.VarChar(10)  // "pm10" o "pm25"
  value             Float                      // Valor en µg/m³
  units             String   @db.VarChar(20)   // "µg/m³"
  
  // Fecha/Hora de la medición (UTC)
  measurementDate   DateTime
  
  // Índice de Calidad del Aire calculado
  aqi               Int?                       // AQI (0-500)
  aqiCategory       String?  @db.VarChar(50)   // "Good", "Moderate", "Unhealthy", etc.
  healthAdvice      String?  @db.Text          // Recomendación de salud
  
  // Metadatos
  createdAt         DateTime @default(now())
  
  // Índices para búsquedas eficientes
  @@index([measurementDate])                    // Filtrar por fecha
  @@index([latitude, longitude])                // Búsquedas geográficas
  @@index([parameter, aqiCategory])             // Filtrar por tipo y categoría
  @@index([country, measurementDate])           // Datos por país y fecha
  @@map("openaq_measurements")
}
